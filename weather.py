# -*- coding: utf-8 -*-
"""Weather.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13-ITXWJs9U3dO2JqaSokqJ4LtHVr8hTA
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns

df = pd.read_csv('1. Weather Data.csv')

df

dfcopy = df.copy()

df.head()

df.shape

df.index

df.columns

df.dtypes

"""Date/Time change type from object to date/time type"""

df['Weather'].unique()

df.nunique()

df.count()

df['Weather'].value_counts()

df.info()

"""# **1) Find all the unique 'Wind Speed' values in the data.**"""

df.head(2)

df['Wind Speed_km/h'].nunique()

df['Wind Speed_km/h'].unique()

"""# **2) Find the number of times when the 'Weather is exactly Clear'.**"""

df.head(2)

df[df.Weather == 'Clear']

"""# 3) Find the number of times when the 'Wind Speed was exactly 4 km/h'"""

df.columns

df.head(2)

df[df['Wind Speed_km/h'] == 4]

"""# 4) Find out all the Null Values in the data"""

df.isnull()

df.isnull().sum()

"""# 5. Rename 'Weather' to 'Weather Condition'"""

dfcopy.rename(columns = {'Weather' : 'Weather Condition'}, inplace=True)

dfcopy.head(2)

dfcopy.columns

"""# 6. Mean Values of 'Visibility_km'

"""

dfcopy.Visibility_km.mean()

"""# 7) What is the Standard Deviation of 'Pressure'  in this data"""

dfcopy.Press_kPa.std()

"""# 8. variance of 'Relative Humidty'"""

dfcopy.columns

import statistics as stc

dfcopy['Rel Hum_%'].var()

"""# 9) Find all instances when 'Snow' was recorded."""

dfcopy.head(5)

dfcopy['Weather Condition'].value_counts()

dfcopy[dfcopy['Weather Condition'] == 'Snow']

dfcopy[dfcopy['Weather Condition'].str.contains('Snow')]

"""# 10. Find all instances when 'Wind Speed is above 24' and 'Visibility is 25'."""

dfcopy[(dfcopy['Wind Speed_km/h'] > 24) 
& (dfcopy['Visibility_km'] == 25)]

"""# 11) What is the Mean value of each column against each 'Weather Condition ?"""

dfcopy.head(2)

dfcopy.groupby('Weather Condition').mean()

"""# 12) What is the Minimum & Maximum value of each column against each 'Weather Condition ?"""

dfcopy.head(2)

dfcopy.groupby('Weather Condition').min()

dfcopy.groupby('Weather Condition').max()

"""# 13) Show all the Records where Weather Condition is Fog."""

dfcopy.head(2)

dfcopy[dfcopy['Weather Condition'] == 'Fog']

"""# 14) Find all instances when 'Weather is Clear' or 'Visibility is above 40'."""

dfcopy.head(5)

dfcopy[(dfcopy['Weather Condition'] == 'Clear') 
| (dfcopy['Visibility_km'] > 40)]

"""# **15) Find all instances when :**
# A. 'Weather is Clear' and 'Relative Humidity is greater than 50'
# or
# B. 'Visibility is above 40'

"""

dfcopy.head(2)

dfcopy[(dfcopy['Weather Condition'] == 'Clear') 
& (dfcopy['Rel Hum_%'] > 50) 
| (dfcopy['Visibility_km'] > 40)]